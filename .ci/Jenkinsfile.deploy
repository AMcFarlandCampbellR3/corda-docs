#!groovy

pipeline {
    agent { label "basic" }

    parameters {
        booleanParam defaultValue: false, description: 'Check it to force publishing API docs Docker image regardless of the branch it is built for', name: 'FORCE_PUBLISH'
        booleanParam defaultValue: false, description: 'Perform crawling of Docsite for Algolia', name: 'DO_ALGOLIA'
        string defaultValue: '10.10.0.4', description: 'Address of production instance of docsite', name: 'DOCSITE_SERVER', trim: false
    }

    options {
        timestamps()
        timeout(time: 3, unit: 'HOURS')
        disableConcurrentBuilds() // this makes killAllExistingBuildsForJob always do nothing
        buildDiscarder(logRotator(daysToKeepStr: '7', artifactDaysToKeepStr: '7'))
        ansiColor('xterm')
    }

    triggers {
        upstream threshold: hudson.model.Result.UNSTABLE, upstreamProjects: '/Docs-Builders/Build/docs-site/master'
    }

    stages {
        stage('Deploy Docker image to production') {
            when {
                anyOf {
                    branch 'master'
                    expression { params.FORCE_PUBLISH }
                }
            }
            steps {
                sshagent(['docsite-production']) {
                    sh "ssh -F /dev/null -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null docsite@${params.DOCSITE_SERVER} update-apisite"
                }
            }
        }
        stage('Update search index') {
            environment {
                ALGOLIA_CRED=credentials('algolia-credentials')
            }
            when {
                allOf {
                    anyOf {
                        branch 'master'
                        expression { params.FORCE_PUBLISH }
                    }
                    expression { params.DO_ALGOLIA }
                }
            }
            steps {
                // for now just give docsite a bit of time to start properly
                sh "sleep 30; make crawl ALGOLIA_APPLICATION_ID='${ALGOLIA_CRED_USR}' ALGOLIA_API_ADMIN_KEY='${ALGOLIA_CRED_PSW}'"
            }
        }
    }
    post {
        cleanup {
            deleteDir() /* clean up our workspace */
        }
    }
}
